<%= form_for @event.states.last.user,:url => url_for(:controller => 'events', :action => 'update'),local: true do |form| %>
  <p>
    <%= form.label :email %><br>
    <%= form.text_area :email %>
  </p>
##################################################
def adduser 
    @user=User.find_by(email: params[:user][:email])
    @state = State.new
    @state.user_id = @user.id
    @state.evennt_id = params[:evennt_id]
    debugger 
    if @state.save
       redirect_to  users_path 
    else
      redirect_to  users_path
    end
  end

####################################################

    patch 'adduser',to:'states#adduser'
######################################################

<%= form_for @event.states.last.user,:url => url_for(:controller => 'states', :action => 'adduser'),local: true do |form| %>
  <p>
    <%= form.label :email %><br>
    <%= class User < ApplicationRecord
  has_many :states 
  has_many :evennts, through: :states , dependent: :delete_all
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable , :confirmable, :lockable

end
form.text_area :email %>
  </p>
  
  <p>
  <%= form.submit "Add user ", name:"evennt_id",value:@event.id  %>
  </p>
<%end%>

=================================
class User < ApplicationRecord
  has_many :states 
  has_many :evennts, through: :states , dependent: :delete_all
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable 
end
